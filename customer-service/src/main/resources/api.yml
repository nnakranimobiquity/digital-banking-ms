openapi: 3.0.3
info:
  title: Customer-Service API Specification
  description: Customer-Service API Specification (Digital Banking)
  version: v1
servers:
  - url: http://localhost:8000/customer-service/
    description: The server
paths:
  /client-api/v1/customers:
    post:
      tags:
        - Customer
      summary: Create a Customer.
      description: Create Customer For Digital Banking Application.
      operationId: postCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        "201":
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
        "500":
          $ref: '#/components/schemas/InternalServerException'
    get:
      tags:
        - Customer
      summary: Get a Customer based on requested parameters
      description: Returns a customer  matching one of the provided id's. One of these is mandatory.
      operationId: getCustomers
      parameters:
        - name: id
          in: query
          description: System generated user id
          required: false
          schema:
            type: string
        - name: user_name
          in: query
          description: The online user name defined by the user.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Customer Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerResponse'
        "500":
          $ref: '#/components/schemas/InternalServerException'
        "404":
          $ref: '#/components/schemas/NotFoundException'
        "400":
          $ref: '#/components/schemas/BadRequestException'
  /client-api/v1/customers/{username}:
    patch:
      tags:
        - Customer
      summary: Updates a customer by user name
      description: Updates a customer by username
      operationId: patchCustomerByUserName
      parameters:
        - name: username
          in: path
          description: User Name of the User
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCustomerRequest'
      responses:
        "204":
          description: No content
        "500":
          $ref: '#/components/schemas/InternalServerException'
        "404":
          $ref: '#/components/schemas/NotFoundException'
    delete:
      tags:
        - Customer
      summary: Delete a customer by user name
      description: Delete Customer and respective child records of Customer
      operationId: deleteCustomerByUserName
      parameters:
        - name: username
          in: path
          description: User Name of the User
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
        "500":
          $ref: '#/components/schemas/InternalServerException'
        "404":
          $ref: '#/components/schemas/NotFoundException'
components:
  schemas:
    BadRequestException:
      type: object
      description: Generic exception representating the bad request
      x-java-type: com.mobiquity.v1.exceptions.BadRequestException
    NotFoundException:
      type: object
      description: Generic Exception representating data not found exception
      x-java-type: com.mobiquity.v1.exceptions.BadRequestException
    InternalServerException:
      type: object
      description: Generic exception representating internal server error
      x-java-type: com.mobiquity.v1.exceptions.BadRequestException
    Id:
      type: string
      description: The System Generated User Id of the Customer
      maxLength: 36
      example: "4gg45-fsdf45-fsdfj56-5454"
    UserName:
      type: string
      description: The online user name.
      minLength: 1
      maxLength: 30
      example: "JohnSmith1"
    FirstName:
      type: string
      description: First Name of the User used for the profile screen
      maxLength: 50
      example: "John"
    LastName:
      type: string
      description: Last Name of the User used for the profile screen
      maxLength: 50
      example: "Smith"
    PhoneNumber:
      type: string
      description: Primary Mobile number of the User
      maxLength: 50
      example: "965456797"
    Email:
      type: string
      description: Primary Email address of the User
      maxLength: 50
      example: "john.smith@mobiquityinc.com"
    PreferredLanguage:
      type: string
      description: Preferred Language of the User as per ISO 639.2
      enum: [ EN, FR, DE ]
      example: EN
    CreatedOn:
      type: string
      description: The creation date of the object
      format: date-time
      example: "2018-11-13T20:20:39+00:00"
    UpdatedOn:
      type: string
      description: The modification date of the object
      format: date-time
      example: "2018-11-13T20:20:39+00:00"
    ExternalId:
      type: string
      description: External User Id
      maxLength: 50
      example: "JohnSmith1_ext"
    Status:
      type: string
      description: The status of the customer
      enum:
        - ACTIVE
        - PENDING
        - INACTIVE
      example: "ACTIVE"
    GetCustomerResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        userName:
          $ref: '#/components/schemas/UserName'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        status:
          $ref: '#/components/schemas/Status'
        preferredLanguage:
          $ref: '#/components/schemas/PreferredLanguage'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        createdOn:
          $ref: '#/components/schemas/CreatedOn'
        updatedOn:
          $ref: '#/components/schemas/UpdatedOn'
    CreateCustomerRequest:
      required:
        - userName
        - firstName
        - lastName
        - phoneNumber
      type: object
      properties:
        userName:
          $ref: '#/components/schemas/UserName'
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        preferredLanguage:
          $ref: '#/components/schemas/PreferredLanguage'
    CreateCustomerResponse:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/Id'
    PatchCustomerRequest:
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
        lastName:
          $ref: '#/components/schemas/LastName'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          $ref: '#/components/schemas/Email'
        preferredLanguage:
          $ref: '#/components/schemas/PreferredLanguage'
        status:
          $ref: '#/components/schemas/Status'